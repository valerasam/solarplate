{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\programming\\\\solarplate\\\\src\\\\components\\\\Map\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nconst containerStyle = {\n  width: '100vw',\n  height: '400px'\n};\nconst center = {\n  lat: 51.064224,\n  lng: 17.017063\n};\n\nfunction Map() {\n  _s();\n\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDgTDE3UDZHLNa_Q9KrrKii-eMpsPVvokM\"\n  });\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 16,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Map, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/programming/solarplate/src/components/Map/Map.js"],"names":["React","GoogleMap","useJsApiLoader","containerStyle","width","height","center","lat","lng","Map","isLoaded","id","googleMapsApiKey","map","setMap","useState","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,OADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAKA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,SADQ;AAEbC,EAAAA,GAAG,EAAE;AAFQ,CAAf;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAeR,cAAc,CAAC;AAClCS,IAAAA,EAAE,EAAE,mBAD8B;AAElCC,IAAAA,gBAAgB,EAAE;AAFgB,GAAD,CAAnC;AAKA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,KAAK,CAACe,QAAN,CAAe,IAAf,CAAtB;AAEA,QAAMC,MAAM,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,SAASC,QAAT,CAAkBL,GAAlB,EAAuB;AACtD,UAAMM,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAV,IAAAA,GAAG,CAACW,SAAJ,CAAcL,MAAd;AACAL,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAJc,EAIZ,EAJY,CAAf;AAMA,QAAMY,SAAS,GAAGzB,KAAK,CAACiB,WAAN,CAAkB,SAASC,QAAT,CAAkBL,GAAlB,EAAuB;AACzDC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GAFiB,EAEf,EAFe,CAAlB;AAIA,SAAOJ,QAAQ,gBACb,QAAC,SAAD;AACE,IAAA,iBAAiB,EAAEP,cADrB;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,MAAM,EAAEU,MAJV;AAKE,IAAA,SAAS,EAAES,SALb;AAAA,2BAQE;AARF;AAAA;AAAA;AAAA;AAAA,UADa,gBAWX,qCAXJ;AAYD;;GA9BQhB,G;UACcP,c;;;KADdO,G;AAgCT,kCAAeT,KAAK,CAAC0B,IAAN,CAAWjB,GAAX,CAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '100vw',\r\n  height: '400px'\r\n};\r\n\r\nconst center = {\r\n  lat: 51.064224,\r\n  lng: 17.017063\r\n};\r\n\r\nfunction Map() {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyDgTDE3UDZHLNa_Q9KrrKii-eMpsPVvokM\"\r\n  });\r\n\r\n  const [map, setMap] = React.useState(null);\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={16}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n    >\r\n      { /* Child components, such as markers, info windows, etc. */}\r\n      <></>\r\n    </GoogleMap>\r\n  ) : <></>;\r\n}\r\n\r\nexport default React.memo(Map);"]},"metadata":{},"sourceType":"module"}
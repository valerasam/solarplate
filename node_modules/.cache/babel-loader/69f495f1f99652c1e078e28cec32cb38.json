{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\programming\\\\solarplate\\\\src\\\\components\\\\Map\\\\Map.js\";\nimport { GoogleMap } from '@react-google-maps/api';\nimport React from 'react';\nimport './Map.css';\n\nconst Map = () => {\n  function initMap() {\n    let opt = {\n      center: {\n        lat: +51.064224,\n        lng: +17.017063\n      },\n      zoom: 13\n    };\n    let map = new GoogleMap.maps.Map(document.getElementById(\"map\"), opt);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDgTDE3UDZHLNa_Q9KrrKii-eMpsPVvokM&callback=initMap\",\n      async: true,\n      defer: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // import { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n// const containerStyle = {\n//   width: '400px',\n//   height: '400px'\n// };\n// const center = {\n//   lat: +51.064224,\n//   lng: +17.017063\n// };\n// function Map() {\n//   const { isLoaded } = useJsApiLoader({\n//     id: 'google-map-script',\n//     googleMapsApiKey: \"AIzaSyDgTDE3UDZHLNa_Q9KrrKii-eMpsPVvokM\"\n//   });\n//   const [map, setMap] = React.useState(null);\n//   const onLoad = React.useCallback(function callback(map) {\n//     const bounds = new window.google.maps.LatLngBounds();\n//     map.fitBounds(bounds);\n//     setMap(map);\n//   }, []);\n//   const onUnmount = React.useCallback(function callback(map) {\n//     setMap(null);\n//   }, []);\n//   return isLoaded ? (\n//     <GoogleMap\n//       mapContainerStyle={containerStyle}\n//       center={center}\n//       zoom={10}\n//       onLoad={onLoad}\n//       onUnmount={onUnmount}\n//     >\n//       { /* Child components, such as markers, info windows, etc. */}\n//       <></>\n//     </GoogleMap>\n//   ) : <></>;\n// }\n// export default React.memo(Map);\n\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["D:/programming/solarplate/src/components/Map/Map.js"],"names":["GoogleMap","React","Map","initMap","opt","center","lat","lng","zoom","map","maps","document","getElementById"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,WAASC,OAAT,GAAmB;AACjB,QAAIC,GAAG,GAAG;AACRC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,CAAC,SADA;AAENC,QAAAA,GAAG,EAAE,CAAC;AAFA,OADA;AAKRC,MAAAA,IAAI,EAAE;AALE,KAAV;AAOA,QAAIC,GAAG,GAAG,IAAIT,SAAS,CAACU,IAAV,CAAeR,GAAnB,CAAuBS,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAvB,EAAuDR,GAAvD,CAAV;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,GAAG,EAAC,sGAAZ;AAAmH,MAAA,KAAK,MAAxH;AAAyH,MAAA,KAAK;AAA9H;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD,CApBD,C,CAsBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;KAlEMF,G;AAmEN,eAAeA,GAAf","sourcesContent":["import { GoogleMap } from '@react-google-maps/api';\r\nimport React from 'react';\r\n\r\n\r\nimport './Map.css';\r\n\r\nconst Map = () => {\r\n  function initMap() {\r\n    let opt = {\r\n      center: {\r\n        lat: +51.064224,\r\n        lng: +17.017063\r\n      },\r\n      zoom: 13\r\n    };\r\n    let map = new GoogleMap.maps.Map(document.getElementById(\"map\"), opt);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"map\"></div>\r\n      <script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDgTDE3UDZHLNa_Q9KrrKii-eMpsPVvokM&callback=initMap\" async defer>\r\n\r\n      </script>\r\n    </>\r\n  );\r\n};\r\n\r\n// import { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\r\n\r\n// const containerStyle = {\r\n//   width: '400px',\r\n//   height: '400px'\r\n// };\r\n\r\n// const center = {\r\n//   lat: +51.064224,\r\n//   lng: +17.017063\r\n// };\r\n\r\n// function Map() {\r\n//   const { isLoaded } = useJsApiLoader({\r\n//     id: 'google-map-script',\r\n//     googleMapsApiKey: \"AIzaSyDgTDE3UDZHLNa_Q9KrrKii-eMpsPVvokM\"\r\n//   });\r\n\r\n//   const [map, setMap] = React.useState(null);\r\n\r\n//   const onLoad = React.useCallback(function callback(map) {\r\n//     const bounds = new window.google.maps.LatLngBounds();\r\n//     map.fitBounds(bounds);\r\n//     setMap(map);\r\n//   }, []);\r\n\r\n//   const onUnmount = React.useCallback(function callback(map) {\r\n//     setMap(null);\r\n//   }, []);\r\n\r\n//   return isLoaded ? (\r\n//     <GoogleMap\r\n//       mapContainerStyle={containerStyle}\r\n//       center={center}\r\n//       zoom={10}\r\n//       onLoad={onLoad}\r\n//       onUnmount={onUnmount}\r\n//     >\r\n//       { /* Child components, such as markers, info windows, etc. */}\r\n//       <></>\r\n//     </GoogleMap>\r\n//   ) : <></>;\r\n// }\r\n\r\n// export default React.memo(Map);\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}